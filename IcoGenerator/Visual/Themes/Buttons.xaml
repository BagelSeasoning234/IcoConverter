<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:CustomControls="clr-namespace:IcoGenerator.Visual.CustomControls">

    <!-- A standard rounded button. -->
    <Style TargetType="{x:Type Button}" 
           x:Key="StandardButton">
        <Style.Setters>

            <Setter Property="Foreground"
                    Value="White"/>

            <Setter Property="BorderBrush"
                    Value="{StaticResource MediumGrayBrush}"/>

            <Setter Property="FontFamily"
                    Value="{StaticResource UrbanistThin}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <!-- Border -->
                        <Border x:Name="Border"
                                BorderBrush="{StaticResource MediumGrayBrush}" 
                                BorderThickness="1.5"
                                Background="{StaticResource LightPurpleBrush}"
                                CornerRadius="10"
                                ClipToBounds="True"
                                Padding="5">

                            <!-- Prevents clipping outside of rounded corners. -->
                            <Border.OpacityMask>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Border Background="Black"
                                                SnapsToDevicePixels="True"
                                                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}"
                                                Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}}"
                                                Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Border}}"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.OpacityMask>

                            <!-- Content -->
                            <ContentPresenter x:Name="Content"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver"
                                Value="True">
                                <Setter Property="BorderBrush" TargetName="Border"
                                Value="White"/>
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                Value="False">
                                <Setter Property="Foreground"
                                Value="{StaticResource MediumGrayBrush}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style.Setters>

    </Style>

    <!-- A standard radio button. -->
    <Style TargetType="{x:Type RadioButton}" 
           x:Key="StandardRadioButton">
        <Style.Setters>

            <Setter Property="Foreground"
                    Value="White"/>

            <Setter Property="BorderBrush"
                    Value="{StaticResource MediumGrayBrush}"/>

            <Setter Property="FontFamily"
                    Value="{StaticResource UrbanistThin}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">

                        <!-- Border -->
                        <Border x:Name="Border"
                                Background="{StaticResource LightPurpleBrush}"
                                BorderBrush="{StaticResource MediumGrayBrush}" 
                                BorderThickness="1.5"
                                CornerRadius="10"
                                ClipToBounds="True"
                                Padding="30 7.5 30 7.5">

                            <!-- Prevents clipping outside of rounded corners. -->
                            <Border.OpacityMask>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Border Background="Black"
                                                SnapsToDevicePixels="True"
                                                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}"
                                                Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}}"
                                                Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Border}}"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.OpacityMask>

                            <!-- Content -->
                            <ContentPresenter x:Name="Content"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver"
                                Value="True">
                                <Setter Property="Background" TargetName="Border"
                                        Value="{StaticResource LigherPurpleBrush}"/>
                            </Trigger>

                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter Property="Background" TargetName="Border"
                                        Value="{StaticResource VeryLightPurpleBrush}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                Value="False">
                                <Setter Property="Foreground"
                                Value="{StaticResource MediumGrayBrush}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style.Setters>

    </Style>
    
    <!-- Window Specific Buttons -->
    
    <!-- System Logo Button -->
    <Style TargetType="{x:Type Button}" 
           x:Key="LogoButton">
        <Style.Setters>

            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="32"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!-- Content -->
                        <ContentPresenter x:Name="Content"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style.Setters>

    </Style>

    <!-- Minimize Control Button -->
    <Style TargetType="{x:Type CustomControls:WindowControlButton}"
           x:Key="Minimize Control Button">

        <Style.Setters>

            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CustomControls:WindowControlButton}">

                        <!-- Background -->
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                
                                <!-- Content -->
                                <Image x:Name="Image"
                                       Source="/Resources/Images/Buttons/Minimize Icon.png"
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Center"
                                       Width="28"
                                       Height="28"/>
                               
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" TargetName="Image"
                                        Value="/Resources/Images/Buttons/Minimize Icon Hovered.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style.Setters>
        
    </Style>
    
    <!-- Maximize Control Button -->
    <Style TargetType="{x:Type CustomControls:WindowControlButton}"
           x:Key="Maximize Control Button">

        <Style.Setters>

            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CustomControls:WindowControlButton}">

                        <!-- Background -->
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <Grid>

                                <!-- Content -->
                                <Image x:Name="Image"
                                       Source="/Resources/Images/Buttons/Maximize Icon.png"
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Center"
                                       Width="28"
                                       Height="28"/>

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" TargetName="Image"
                                        Value="/Resources/Images/Buttons/Maximize Icon Hovered.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style.Setters>

    </Style>

    <!-- Close Control Button -->
    <Style TargetType="{x:Type CustomControls:WindowControlButton}"
           x:Key="Close Control Button">

        <Style.Setters>

            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CustomControls:WindowControlButton}">

                        <!-- Background -->
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <Grid>

                                <!-- Content -->
                                <Image x:Name="Image"
                                       Source="/Resources/Images/Buttons/Close Icon.png"
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Center"
                                       Width="28"
                                       Height="28"/>

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" TargetName="Image"
                                        Value="/Resources/Images/Buttons/Close Icon Hovered.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style.Setters>

    </Style>

</ResourceDictionary>